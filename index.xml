<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Welcome to Aloogy的小世界</title>
    <link>http://localhost:1313/</link>
    <description>Recent content on Welcome to Aloogy的小世界</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 23 Apr 2024 23:47:47 +0800</lastBuildDate>
    <atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>SpringBoot&#43;Vue1</title>
      <link>http://localhost:1313/posts/springboot&#43;vue1/</link>
      <pubDate>Tue, 23 Apr 2024 23:47:47 +0800</pubDate>
      <guid>http://localhost:1313/posts/springboot&#43;vue1/</guid>
      <description>Spring boot+vue全栈开发[1] Java EE企业级框架：SpringBoot+MyBatisPlus（用spring boot开发web应用） web前端核心框架：Vue+ElementUI（可以实现前后端分离开发） 公共云部署：前后端项目集成打包与部署 web技术基础 市面上的软件主要分为两种：&#xA;BS（Browser/Sever,浏览器/服务器架构模式）==更火！== 因此，Browser/Server模式开始流行，简称BS架构， ==B/S架构的主要特点是分散性高、维护方便、开发简单、共享性高、总拥有成本低。== CS（Client/Server,客户端/服务器架构模式） C/S架构主要特点是交互性强，具有安全访问模式，网络流量低，响应速度快。 客户端负责绝大数的事情。因为客户端负责大多数业务逻辑和UI演示，所以也被称为胖客户端 ，C/S结构的软件需要针对不同的操作系统开发不同版本的软件。 随着互联网的兴起，CS架构不适合Web，最大的原因是Web应用程序的修改和升级非常迅速，而CS架构需要每个客户端逐个升级桌面App。 BS架构的原理 在BS架构下，客户端只需要浏览器，应用程序的逻辑和数据都存储在服务器端。浏览器只需要请求服务器，获取Web页面，并把Web页面展示给用户即可。&#xA;后端开发指：web服务器开发+数据库服务器开发&#xA;maven maven是一个项目管理工具，可以对Java项目进行自动化依赖管理和自动化的构建。&#xA;maven的功能 项目构建：帮我们自动下载依赖（pom.xml[核心的配置文件]），提供标准的、跨平台的自动化构建项目的方式 依赖管理：方便快捷的管理项目依赖的资源（jar包），避免资源间的版本冲突 统一开发结果：提供标准的，统一的项目开发结构（Java代码放Java目录，测试放test目录，webapp放web的项目） maven仓库 运行maven项目时，maven所需要的任何构件都是从本地仓库获取，如果本地仓库没有的话，它会尝试从远程仓库下载构件至本地仓库&#xA;springboot介绍（需要有Java基础） Spring Boot是由Pivotal团队提供的基于Spring的全新框架，旨在简化Spring应用（有很多个pom文件）的初始搭建和开发过程。 Spring Boot是所有基于Spring开发项目的起点 Spring Boot就是尽可能地简化应用开发的门槛，让应用开发、测试、部署变得更加简单。 1. springboot特点： 遵循“约定优于配置”的原则，只需要很少的配置或使用默认的配置。 能够使用内嵌的Tomcat、Jetty服务器，不需要部署war文件；（具有内嵌的服务器） 提供定制化的启动器Starters，简化Maven配置，，不用写这么多依赖配置，开箱即用。 ==纯Java配置，没有代码生成，也不需要XML配置。== 提供了生产级的服务监控方案，如安全监控、应用监控、健康检测等。 2. 创建项目————填写项目信息 Group:填入公司域名&#xA;Artifact:项目名称&#xA;package com.example.demo.controller; import org.springframework.web.bind.annotation.GetMapping; import org.springframework.web.bind.annotation.RestController; @RestController//接受客户端信息并返回信息 public class HelloController { //http://www.baidu.com/s/xx //本机域名：http://localhost:8080/hello @GetMapping(&amp;#34;/hello&amp;#34;) public String hello() { return &amp;#34;Hello World!&amp;#34;; } } //控制器 3.</description>
    </item>
  </channel>
</rss>
